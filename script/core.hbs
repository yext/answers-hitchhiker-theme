<script>
  const sdkVersion = '{{global_config.sdkVersion}}';
  if (!sdkVersion) {
    console.error('ERROR: no sdkVersion specified, please specify an sdkVersion in the global_config.');
  }
</script>
<script src="https://assets.sitescdn.net/answers/v{{global_config.sdkVersion}}/{{#if params.sdkLocaleOverride}}{{#unless (eq params.sdkLocaleOverride 'en')}}{{params.sdkLocaleOverride}}-{{/unless}}{{else if global_config.locale}}{{#unless (eq global_config.locale 'en')}}{{global_config.locale}}-{{/unless}}{{/if}}answerstemplates.compiled.min.js" defer></script>
<script>
{{#babel}}
  function initAnswers() {
    const JAMBO_INJECTED_DATA = {{{ json env.JAMBO_INJECTED_DATA }}} || {};
    const pages = JAMBO_INJECTED_DATA.pages || {};
    const IS_STAGING = HitchhikerJS.isStaging(pages.stagingDomains || []);
    const injectedConfig = {
      experienceVersion: IS_STAGING ? 'STAGING' : 'PRODUCTION',
      {{#with env.JAMBO_INJECTED_DATA}}
        {{#if businessId}}businessId: "{{businessId}}",{{/if}}
        {{#with (lookup (lookup (lookup this 'answers') 'experiences') ../global_config.experienceKey)}}
          {{#if apiKey}}apiKey: "{{apiKey}}",{{/if}}
        {{/with}}
      {{/with}}
    };
    const userConfig = {
      {{#with (deepMerge global_config (lookup verticalsToConfig verticalKey) pageSettings) }}
        ...{{{ json this }}},
        {{#if verticalLimit}}
          search: {
            limit: {{verticalLimit}},
            ...{{{ json search }}}
          },
        {{/if}}
      {{/with}}
    };
    ANSWERS.init({
      templateBundle: TemplateBundle.default,
      ...injectedConfig,
      ...userConfig,
      querySource: window.isOverlay ? 'OVERLAY' : 'STANDARD',
      onStateChange: (objParams, stringParams, replaceHistory) => {
        if ('parentIFrame' in window) {
          parentIFrame.sendMessage(JSON.stringify({
            params: iframeGetSearchParams(),
            replaceHistory: replaceHistory
          }));
        }
      },
      onReady: () => {
        {{> @partial-block }}

        {{> script/on-ready}}

        {{#if global_config.conversionTrackingEnabled}}
          ANSWERS.setConversionsOptIn(true);
        {{/if}}

        ANSWERS.registerHelper('all', function (...args) {
          return args.filter(item => item).length === args.length;
        });

        ANSWERS.registerHelper('any', function (...args) {
          return args.filter(item => item).length > 1;
        });

        ANSWERS.registerHelper('matches', function(str, regexPattern) {
          const regex = new RegExp(regexPattern)
          return str && str.match(regex);
        });

        /**
         * Determine whether a URL is absolute or not.
         * Common examples: "mailto:slapshot@gmail.com", "//yext.com", "https://yext.com"
         */
        ANSWERS.registerHelper('isNonRelativeUrl', function(str) {
          const absoluteURLRegex = /^(\/|[a-zA-Z]+:)/;
          return str && str.match(absoluteURLRegex);
        });
      }
    });
    {{> script/after-init}}
  }
{{/babel}}
</script>
<script src="https://assets.sitescdn.net/answers/v{{global_config.sdkVersion}}/{{#if params.sdkLocaleOverride}}{{#unless (eq params.sdkLocaleOverride 'en')}}{{params.sdkLocaleOverride}}-{{/unless}}{{else if global_config.locale}}{{#unless (eq global_config.locale 'en')}}{{global_config.locale}}-{{/unless}}{{/if}}answers.min.js" onload="initAnswers()" defer></script>
