// Overrides for SDK filter components
@import "sdk-filter-overrides";

.AnswersVerticalMap.CollapsibleFilters {
  @include CollapsibleFiltersOverrides;
  @include CollapsibleFilters;

  .Answers-resultsHeader {
    border-bottom: var(--yxt-border-default);
  }

  .Answers-viewResultsButton {
    left: 0;

    @include bpgte(sm) {
      width: 50%;
    }
  }

  .CollapsibleFilters {
    &-inactive {
      display: none;
    }

    @include bpgte(sm) {
      &-inactive.Answers-footer {
        display: flex;
      }

      &-unstuck {
        position: absolute;
      }
    }
  }
}

.VerticalMap.YxtFooter.CollapsibleFilters-inactive {
  display: none;
  @include bpgte(sm) {
    display: block;
  }
}

.AnswersVerticalStandard.CollapsibleFilters,
.AnswersVerticalGrid.CollapsibleFilters {
  @include CollapsibleFiltersOverrides;

  .Answers-facets,
  .Answers-filterBox,
  .Answers-sortOptions {
    padding: 0;
  }

  @media (max-width: #{$breakpoint-collapsed-filters}) {
    @include CollapsibleFilters;

    .CollapsibleFilters-inactive {
      display: none;
    }

    .yxt-SpellCheck {
      padding-top: calc(var(--yxt-base-spacing) / 2);
    }

    .Answers-viewResultsButton {
      max-width: var(--hh-answers-container-width);
      left: 50%;
      transform: translateX(-50%);

      @include bplte(xs) {
        max-width: $breakpoint-mobile-max;
        left: 0;
        transform: none;
      }
    }
  }

  @media (min-width: #{$breakpoint-expanded-filters}) {
    .Answers-filterLink,
    .Answers-viewResultsButton {
      display: none;
    }
  }
}

.VerticalStandard.YxtFooter.CollapsibleFilters-inactive,
.VerticalGrid.YxtFooter.CollapsibleFilters-inactive {
  @media (max-width: #{$breakpoint-collapsed-filters}) {
    display: none;
  }
}
