(item, config, marker) => {
  let pinStyling = {
    label: marker.label.toString() || '',
    height: {{#if height}}{{height}}{{else}}26{{/if}},
    width: {{#if width}}{{width}}{{else}}22{{/if}},
    backgroundColor: '{{#if backgroundColor}}{{backgroundColor}}{{else}}red{{/if}}',
    labelColor: '{{#if labelColor}}{{labelColor}}{{else}}white{{/if}}',
    strokeColor: '{{#if strokeColor}}{{strokeColor}}{{else}}white{{/if}}',
  }
  config.label = {
    text: undefined, // Since our SVG has a label, we do not want to use the built-in one.
    color: ''
  };
  config.svg = `
    <svg xmlns="http://www.w3.org/2000/svg"
         width="${pinStyling.width}"
         height="${pinStyling.height}"
         viewBox="0 -1 22 28">
      <g fill="none" fill-rule="evenodd">
        <path fill="${pinStyling.backgroundColor}"
              fill-rule="nonzero"
              stroke="${pinStyling.strokeColor}"
              d="M0 10.767c0 5.563 7.196 12.418 9.947 14.836.6.527 1.509.53 2.112.005C14.815 23.212 22 16.423 22 10.767 22 4.82 17.075 0 11 0S0 4.82 0 10.767"/>
        <text fill="${pinStyling.labelColor}"
              font-family="Arial-BoldMT,Arial"
              font-size="12"
              font-weight="bold">
          <tspan x="50%" y="15" text-anchor="middle">${pinStyling.label}</tspan>
        </text>
      </g>
    </svg>`;
  return config;
}