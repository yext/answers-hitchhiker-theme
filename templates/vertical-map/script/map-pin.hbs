(item, config, marker) => {
  const pinStyling = {
    label: marker.label.toString() || '',
    height: {{#if pin.height}}{{pin.height}}{{else}}26{{/if}},
    width: {{#if pin.width}}{{pin.width}}{{else}}22{{/if}},
    backgroundColor: '{{#if pin.backgroundColor}}{{pin.backgroundColor}}{{else}}#5387d7{{/if}}',
    labelColor: '{{#if pin.labelColor}}{{pin.labelColor}}{{else}}white{{/if}}',
    strokeColor: '{{#if pin.strokeColor}}{{pin.strokeColor}}{{else}}black{{/if}}',
  }

  const svg =
    `<svg xmlns="http://www.w3.org/2000/svg"
         width="${pinStyling.width}"
         height="${pinStyling.height}"
         viewBox="0 -1 22 28">
      <g fill="none" fill-rule="evenodd">
        <path fill="${pinStyling.backgroundColor}"
              fill-rule="nonzero"
              stroke="${pinStyling.strokeColor}"
              d="M0 10.767c0 5.563 7.196 12.418 9.947 14.836.6.527 1.509.53 2.112.005C14.815 23.212 22 16.423 22 10.767 22 4.82 17.075 0 11 0S0 4.82 0 10.767"/>
        <text fill="${pinStyling.labelColor}"
              font-family="Arial-BoldMT,Arial"
              font-size="12"
              font-weight="bold">
          <tspan x="50%" y="15" text-anchor="middle">${pinStyling.label}</tspan>
        </text>
      </g>
    </svg>`;

  const mapProvider = '{{mapProvider}}'.trim().toLowerCase();
  {{!-- Account for interface differences between GoogleMapProvider and MapboxMapProvider --}}
  if (mapProvider === 'google') {
    config.svg = svg;
    {{!-- Don't use the sdk's built-in label for GoogleMapProvider --}}
    config.label = '';
    config.scaledSize = {
      w: pinStyling.width,
      h: pinStyling.height,
    };
  } else if (mapProvider === 'mapbox') {
    const el = document.createElement('img');
    el.src = `data:image/svg+xml;charset=utf-8, ${encodeURIComponent(svg)}`;
    config.wrapper = el;
  } else {
    throw new Error('Unrecognized map provider: "' + mapProvider + '"');
  }
  return config;
}