ANSWERS.addComponent('UniversalResults', Object.assign({}, {
    container: '.js-answersUniversalResults',
    config: Object.assign({}, {
      {{!-- Map each Vertical config's verticalsToConfig --}}
      {{#each verticalConfigs}}
        {{#if verticalKey}}
          '{{{verticalKey}}}': {
            {{#with (lookup verticalsToConfig verticalKey)}}
              {{> VerticalConfig verticalKey=../verticalKey urlWithoutExtension=@key }}
            {{/with}}
          },
        {{/if}}
      {{/each}}
    }, {
      {{!-- Map the Universal config's verticalsToConfig --}}
      {{#each verticalsToConfig}}
        '{{@key}}': Object.assign(
          {},
          { {{> VerticalConfig verticalKey=@key }} },
          {{#each ../verticalConfigs}}
            {{#ifeq verticalKey @../key}}
              { {{> VerticalConfig @../this verticalKey=verticalKey urlWithoutExtension=@key }} },
            {{/ifeq}}
          {{/each}}
        ),
      {{/each}}
    }),
  },
  {{{ json componentSettings.UniversalResults }}}
));

{{#*inline 'VerticalConfig'}}
  modifier: '{{{verticalKey}}}',
  {{#if urlWithoutExtension}}
    url: '{{{urlWithoutExtension}}}.html',
    verticalPages: [ // TODO remove this once the theme version does not support pre-v1.3 of the SDK
      {
        verticalKey: '{{{verticalKey}}}',
        url: '{{{urlWithoutExtension}}}.html',
      }
    ],
  {{/if}}
  {{#if cardType}}
    card: {
      cardType: '{{{cardType}}}'
    },
  {{/if}}
  sectionTitle: {{#if sectionTitle}}'{{{sectionTitle}}}'{{else}}{{#if label}}'{{{label}}}'{{else}}'{{{verticalKey}}}'{{/if}}{{/if}},
  {{#if icon}}
    sectionTitleIconName: '{{{icon}}}',
  {{/if}}
  {{#if iconUrl}}sectionTitleIconUrl: '{{{iconUrl}}}',{{/if}}
  viewAllText: {{#if viewAllText}}'{{{viewAllText}}}'{{else}}'View All'{{/if}},
  {{#if mapConfig}}
    includeMap: true,
    mapConfig: Object.assign({
      apiKey: HitchhikerJS.getDefaultMapApiKey('{{ mapConfig.mapProvider }}')
    },
    {{{ json mapConfig }}},
    {{!-- This theme pin config must come after mapConfig in Object.assign --}}
    {
      pin: {{> templates/universal-standard/script/map-pin mapConfig }},
    }),
  {{/if}}
  {{#if universalLimit}}
    transformData: (data) => {
      let results = data.results;
      if (results) {
        results = results.filter((rex, idx) => {
          return idx < {{{universalLimit}}};
        });
      }
      return Object.assign(data, {
        results: results
      });
    },
  {{/if}}
{{/inline}}
