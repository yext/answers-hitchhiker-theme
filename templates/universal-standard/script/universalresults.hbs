ANSWERS.addComponent("UniversalResults", Object.assign({}, {
    container: ".js-answersUniversalResults",
    config: Object.assign({}, {
      {{!-- Map each Vertical config's verticalsToConfig --}}
      {{#each verticalConfigs}}
        {{#if verticalKey}}
          "{{{verticalKey}}}": {
            {{#with (lookup verticalsToConfig verticalKey)}}
              {{> VerticalConfig verticalKey=../verticalKey pageName=@key pagePath=../url relativePath=../../relativePath }}
            {{/with}}
          },
        {{/if}}
      {{/each}}
    }, {
      {{!-- Map the Universal config's verticalsToConfig --}}
      {{#each verticalsToConfig}}
        "{{@key}}": Object.assign(
          {},
          { {{> VerticalConfig verticalKey=@key }} },
          {{#each ../verticalConfigs}}
            {{#ifeq verticalKey @../key}}
              { {{> VerticalConfig @../this verticalKey=verticalKey pageName=@key pagePath=../url relativePath=../../relativePath }} },
            {{/ifeq}}
          {{/each}}
        ),
      {{/each}}
    }),
  },
  {{{ json componentSettings.UniversalResults }}}
));

{{#*inline "VerticalConfig"}}
  {{#if universalSectionTemplate}}
    template: `{{{read (concat "universalsectiontemplates/" universalSectionTemplate)}}}`,
  {{else}}
    template: `{{{read "universalsectiontemplates/standard"}}}`,
  {{/if}}
  modifier: "{{{verticalKey}}}",
  {{#if url}}
    url: "{{#unless (isNonRelativeUrl url)}}{{relativePath}}/{{/unless}}{{{url}}}",
    verticalPages: [ // TODO remove this once the theme version does not support pre-v1.3 of the SDK
      {
        verticalKey: "{{{verticalKey}}}",
        url: "{{#unless (isNonRelativeUrl url)}}{{relativePath}}/{{/unless}}{{{url}}}",
      }
    ],
  {{else if pagePath}}
    url: "{{#unless (isNonRelativeUrl pagePath)}}{{relativePath}}/{{/unless}}{{{pagePath}}}",
    verticalPages: [ // TODO remove this once the theme version does not support pre-v1.3 of the SDK
      {
        verticalKey: "{{{verticalKey}}}",
        pageUrl: "{{#unless (isNonRelativeUrl pagePath)}}{{relativePath}}/{{/unless}}{{{pagePath}}}",
      }
    ],
  {{else if pageName}}
    url: "{{#unless (isNonRelativeUrl pageName)}}{{relativePath}}/{{/unless}}{{{pageName}}}.html",
    verticalPages: [ // TODO remove this once the theme version does not support pre-v1.3 of the SDK
      {
        verticalKey: "{{{verticalKey}}}",
        url: "{{#unless (isNonRelativeUrl pageName)}}{{relativePath}}/{{/unless}}{{{pageName}}}.html",
      }
    ],
  {{/if}}
  {{#if cardType}}
    card: {
      cardType: "{{{cardType}}}"
    },
  {{/if}}
  sectionTitle: {{#if sectionTitle}}"{{{sectionTitle}}}"{{else}}"{{> verticalLabel overridedLabel=label verticalKey=verticalKey fallback=verticalKey}}"{{/if}},
  {{#if icon}}
    sectionTitleIconName: "{{{icon}}}",
  {{/if}}
  {{#if iconUrl}}sectionTitleIconUrl: "{{#unless (isNonRelativeUrl iconUrl)}}{{relativePath}}/{{/unless}}{{{iconUrl}}}",{{/if}}
  viewAllText: {{#if viewAllText}}"{{{viewAllText}}}"{{else}}{{ translateJS phrase='View All' context='View is a verb' }}{{/if}},
  {{#if viewMore}}viewMore: {{viewMore}},{{/if}}
  {{#if mapConfig}}
    includeMap: true,
    mapConfig: Object.assign({
      apiKey: HitchhikerJS.getDefaultMapApiKey("{{ mapConfig.mapProvider }}")
    },
    {{{ json mapConfig }}},
    {{!-- This theme pin config must come after mapConfig in Object.assign --}}
    {
      pin: {{> templates/universal-standard/script/map-pin mapConfig }},
    }),
  {{/if}}
  {{#if universalLimit}}
    transformData: (data) => {
      let results = data.results;
      if (results) {
        results = results.filter((rex, idx) => {
          return idx < {{{universalLimit}}};
        });
      }
      return Object.assign(data, {
        results: results
      });
    },
  {{/if}}
{{/inline}}

{{!--
  Prints the vertical label according to specific logic
  Assumes @root has environment variables and global_config
  @param overridedLabel The hardcoded label from configuration in repo, meant to supercede defaults
  @param verticalKey The current vertical key, if it exists
  @param fallback The fallback for the label if all else doesn't exist
--}}
{{#*inline 'verticalLabel'}}
  {{~#if overridedLabel ~}}
    {{{overridedLabel}}}
  {{~ else if
    (lookup
      (lookup 
        (lookup 
          (lookup
            @root.env.JAMBO_INJECTED_DATA.answers.experiences
            @root.global_config.experienceKey)
          'verticals')
        verticalKey)
      'displayName')
  ~}}
    {{{lookup
      (lookup 
        (lookup 
          (lookup
            @root.env.JAMBO_INJECTED_DATA.answers.experiences
            @root.global_config.experienceKey)
          'verticals')
        verticalKey)
      'displayName'}}}
  {{~ else if verticalKey ~}}
    {{{verticalKey}}}
  {{~ else ~}}
    {{{fallback}}}
  {{~/if ~}}
{{/inline}}
