ANSWERS.addComponent("UniversalResults", Object.assign({}, {
    container: ".js-answersUniversalResults",
    config: Object.assign({}, {
      {{!-- Map each Vertical config's verticalsToConfig --}}
      {{#each verticalConfigs}}
        {{#if verticalKey}}
          "{{{verticalKey}}}": {
            {{#with (lookup verticalsToConfig verticalKey)}}
              {{> VerticalConfig verticalKey=../verticalKey pageName=@key pagePath=../url relativePath=../../relativePath }}
            {{/with}}
          },
        {{/if}}
      {{/each}}
    }, {
      {{!-- Map the Universal config's verticalsToConfig --}}
      {{#each verticalsToConfig}}
        "{{@key}}": Object.assign(
          {},
          { {{> VerticalConfig verticalKey=@key }} },
          {{#each ../verticalConfigs}}
            {{#ifeq verticalKey @../key}}
              { {{> VerticalConfig @../this verticalKey=verticalKey pageName=@key pagePath=../url relativePath=../../relativePath }} },
            {{/ifeq}}
          {{/each}}
        ),
      {{/each}}
    }),
  },
  {{{ json componentSettings.UniversalResults }}}
));

{{#*inline "VerticalConfig"}}
  {{#if universalSectionTemplate}}
    template: `{{{read (concat "universalsectiontemplates/" universalSectionTemplate)}}}`,
  {{else}}
    template: `{{{read "universalsectiontemplates/standard"}}}`,
  {{/if}}
  modifier: "{{{verticalKey}}}",
  {{#if url}}
    url: "{{relativePath}}/{{{url}}}",
    verticalPages: [ // TODO remove this once the theme version does not support pre-v1.3 of the SDK
      {
        verticalKey: "{{{verticalKey}}}",
        url: "{{relativePath}}/{{{url}}}",
      }
    ],
  {{else if pagePath}}
    url: "{{relativePath}}/{{{pagePath}}}",
    verticalPages: [ // TODO remove this once the theme version does not support pre-v1.3 of the SDK
      {
        verticalKey: "{{{verticalKey}}}",
        pageUrl: "{{relativePath}}/{{{pagePath}}}",
      }
    ],
  {{else if pageName}}
    url: "{{{pageName}}}.html",
    verticalPages: [ // TODO remove this once the theme version does not support pre-v1.3 of the SDK
      {
        verticalKey: "{{{verticalKey}}}",
        url: "{{{pageName}}}.html",
      }
    ],
  {{/if}}
  {{#if cardType}}
    card: {
      cardType: "{{{cardType}}}"
    },
  {{/if}}
  sectionTitle: {{#if sectionTitle}}"{{{sectionTitle}}}"{{else}}{{#if label}}"{{{label}}}"{{else}}"{{{verticalKey}}}"{{/if}}{{/if}},
  {{#if icon}}
    sectionTitleIconName: "{{{icon}}}",
  {{/if}}
  {{#if iconUrl}}sectionTitleIconUrl: "{{{iconUrl}}}",{{/if}}
  viewAllText: {{#if viewAllText}}"{{{viewAllText}}}"{{else}}"View All"{{/if}},
  {{#if viewMore}}viewMore: {{viewMore}},{{/if}}
  {{#if mapConfig}}
    includeMap: true,
    mapConfig: Object.assign({
      apiKey: HitchhikerJS.getDefaultMapApiKey("{{ mapConfig.mapProvider }}")
    },
    {{{ json mapConfig }}},
    {{!-- This theme pin config must come after mapConfig in Object.assign --}}
    {
      pin: {{> templates/universal-standard/script/map-pin mapConfig }},
    }),
  {{/if}}
  {{#if universalLimit}}
    transformData: (data) => {
      let results = data.results;
      if (results) {
        results = results.filter((rex, idx) => {
          return idx < {{{universalLimit}}};
        });
      }
      return Object.assign(data, {
        results: results
      });
    },
  {{/if}}
{{/inline}}
